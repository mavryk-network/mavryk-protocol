# This file was automatically generated, do not edit.
# Edit file ci/bin/main.ml instead.

opam:bls12-381:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 6 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: bls12-381
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavkit-accuser-PtAtLas:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavkit-accuser-PtAtLas
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavkit-accuser-PtBoreas:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavkit-accuser-PtBoreas
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavkit-alcotezt:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 6 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavkit-alcotezt
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavkit-baker-PtAtLas:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavkit-baker-PtAtLas
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavkit-baker-PtBoreas:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavkit-baker-PtBoreas
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavkit-client:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavkit-client
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavkit-codec:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavkit-codec
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavkit-crawler:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 4 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavkit-crawler
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavkit-dac-client:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavkit-dac-client
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavkit-dac-node:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 2 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavkit-dac-node
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavkit-dal-node:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 2 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavkit-dal-node
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavkit-distributed-internal:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 7 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 7 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 7 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavkit-distributed-internal
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavkit-distributed-lwt-internal:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 6 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavkit-distributed-lwt-internal
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavkit-injector:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 3 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavkit-injector
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavkit-internal-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 6 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavkit-internal-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavkit-l2-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 5 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavkit-l2-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavkit-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 6 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavkit-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavkit-node:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 2 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavkit-node
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavkit-node-config:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 4 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavkit-node-config
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavkit-proto-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 5 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavkit-proto-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavkit-protocol-000-Ps9mPmXa-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 3 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavkit-protocol-000-Ps9mPmXa-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavkit-protocol-001-PtAtLas-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 2 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavkit-protocol-001-PtAtLas-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavkit-protocol-002-PtBoreas-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 3 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavkit-protocol-002-PtBoreas-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavkit-protocol-alpha-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 3 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavkit-protocol-alpha-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavkit-protocol-compiler:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 5 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavkit-protocol-compiler
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavkit-proxy-server:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 2 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavkit-proxy-server
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavkit-rpc-process:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 3 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavkit-rpc-process
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavkit-shell-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 5 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavkit-shell-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavkit-signer:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 4 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavkit-signer
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavkit-smart-rollup-node:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavkit-smart-rollup-node
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavkit-smart-rollup-node-PtAtLas:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 2 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavkit-smart-rollup-node-PtAtLas
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavkit-smart-rollup-node-PtBoreas:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 2 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavkit-smart-rollup-node-PtBoreas
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavkit-smart-rollup-node-alpha:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 2 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavkit-smart-rollup-node-alpha
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavkit-smart-rollup-node-lib:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 3 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavkit-smart-rollup-node-lib
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavkit-smart-rollup-wasm-debugger:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavkit-smart-rollup-wasm-debugger
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavkit-smart-rollup-wasm-debugger-lib:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 2 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavkit-smart-rollup-wasm-debugger-lib
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavkit-smart-rollup-wasm-debugger-plugin:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 7 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 7 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 7 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavkit-smart-rollup-wasm-debugger-plugin
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavkit-version:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 5 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavkit-version
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavryk-benchmark:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 6 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavryk-benchmark
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavryk-client-demo-counter:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 3 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavryk-client-demo-counter
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavryk-client-genesis:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 3 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavryk-client-genesis
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavryk-dac-client-lib:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 4 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavryk-dac-client-lib
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavryk-dac-lib:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 4 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavryk-dac-lib
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavryk-dac-node-lib:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 3 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavryk-dac-node-lib
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavryk-dal-node-lib:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 4 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavryk-dal-node-lib
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavryk-dal-node-services:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 6 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavryk-dal-node-services
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavryk-openapi:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 7 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 7 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 7 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavryk-openapi
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavryk-protocol-000-Ps9mPmXa:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 4 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavryk-protocol-000-Ps9mPmXa
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavryk-protocol-001-PtAtLas:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 4 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavryk-protocol-001-PtAtLas
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavryk-protocol-002-PtBoreas:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 4 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavryk-protocol-002-PtBoreas
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavryk-protocol-alpha:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 5 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavryk-protocol-alpha
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavryk-protocol-demo-counter:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 5 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavryk-protocol-demo-counter
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavryk-protocol-demo-noops:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 5 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavryk-protocol-demo-noops
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavryk-protocol-genesis:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 5 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavryk-protocol-genesis
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:mavryk-proxy-server-config:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 6 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: mavryk-proxy-server-config
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2

opam:tezt-mavryk:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - saas-linux-2xlarge-amd64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "MavrykCowbot"
    when: delayed
    start_in: 6 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  - mkdir -p $CI_PROJECT_DIR/opam_logs
  - . ./scripts/ci/sccache-start.sh
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - sccache --stop-server || true
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: tezt-mavryk
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    SCCACHE_ERROR_LOG: $CI_PROJECT_DIR/opam_logs/sccache.log
    SCCACHE_IDLE_TIMEOUT: "0"
    SCCACHE_LOG: debug
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
