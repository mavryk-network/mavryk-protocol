.test_template:
  extends:
    - .default_settings_template
    - .image_template__runtime_build_dependencies
    - .rules__octez_changes
  needs:
    - "oc.build_x86_64-released"
    - "oc.build_x86_64-exp-dev-extra"
  stage: test
  before_script:
    - . ./scripts/version.sh
    - eval $(opam env)

# We use the --job option to split tests into jobs of roughly the same
# duration. This is based on a file that contains timings of test results,
# generated with --record. To rebalance jobs, update this record with:
#
#   make && dune exec tezt/tests/main.exe -- --record tezt/test-results.json

.tezt_template:
  variables:
    JUNIT: "tezt-junit.xml"
    TEZT_VARIANT: ""
    # The variable TESTS controls test selection. It passed directly
    # to tezt so can contain tags, their negation, or an arbitrary
    # TSL expression.
    TESTS: ""
  artifacts:
    reports:
      junit: $JUNIT
    paths:
      - selected_tezts.tsv
      - tezt.log
      - tezt-*.log
      - tezt-results-${CI_NODE_INDEX:-1}${TEZT_VARIANT}.json
      - $JUNIT
    # Record artifacts are fetched from the scheduled pipeline.
    # If this pipeline is broken on a Friday and only gets fixed on Monday,
    # the next pipeline runs on Tuesday, so artifacts are unavailable
    # for 4 days. We thus set the expiration to 7 days for safety.
    # It also allows to make statistics on MRs that are less than 1 week old.
    # The tezt artifacts (including records and coverage)
    # take up roughly 2MB / job. Total artifact storage
    # becomes N*P*T*W where N is the days of retention (7 atm), P the
    # number of pipelines per day (~200 atm), T the number of Tezt
    # jobs per pipeline (60) and W the artifact size per tezt job
    # (2MB). This makes 82GB which is less than 1.5% of our total
    # artifact usage (https://gitlab.com/tezos/tezos/-/artifacts).
    expire_in: 7 days
    when: always
  script:
    # Print variables in a shell-friendly format.
    - 'echo "TESTS=\"${TESTS}\" JUNIT=\"${JUNIT}\" CI_NODE_INDEX=\"${CI_NODE_INDEX}\" CI_NODE_TOTAL=\"${CI_NODE_TOTAL}\" TEZT_PARALLEL=\"${TEZT_PARALLEL}\" TEZT_VARIANT=\"${TEZT_VARIANT}\""'
    # Store the list of tests that have been scheduled for execution for later debugging.
    # It is imperative this this first call to tezt receives any flags passed to the
    # second call that affect test selection.
    - ./scripts/ci/tezt.sh
        ${TESTS}
        --from-record tezt/records
        --job ${CI_NODE_INDEX:-1}/${CI_NODE_TOTAL:-1}
        --list-tsv > selected_tezts.tsv
    # For Tezt tests, there are multiple timeouts:
    # - --global-timeout is the internal timeout of Tezt, which only works if tests
    #   are cooperative;
    # - the "timeout" command, which we set to send SIGTERM to Tezt 60s after --global-timeout
    #   in case tests are not cooperative;
    # - the "timeout" command also sends SIGKILL 60s after having sent SIGTERM in case
    #   Tezt is still stuck;
    # - the CI timeout.
    # The use of the "timeout" command is to make sure that Tezt eventually exits,
    # because if the CI timeout is reached, there are no artefacts,
    # and thus no logs to investigate.
    # See also: https://gitlab.com/gitlab-org/gitlab/-/issues/19818
    - ./scripts/ci/exit_code.sh timeout -k 60 1860 ./scripts/ci/tezt.sh
        ${TESTS}
        --color
        --log-buffer-size 5000
        --log-file tezt.log
        --global-timeout 1800
        --on-unknown-regression-files fail
        --junit ${JUNIT}
        --from-record tezt/records
        --job ${CI_NODE_INDEX:-1}/${CI_NODE_TOTAL:-1}
        --record tezt-results-${CI_NODE_INDEX:-1}${TEZT_VARIANT}.json
        --job-count ${TEZT_PARALLEL:-3}
        --retry ${TEZT_RETRY:-1}
    # Only merge coverage traces if coverage output is enabled.
    - if [ -n "${BISECT_FILE:-}" ]; then ./scripts/ci/merge_coverage.sh; fi

# Common template for tezt jobs that use x86_64 binaries and produce
# coverage.
.tezt_tests:
  extends:
    - .test_template
    - .image_template__runtime_e2etest_dependencies
    - .oc.template__coverage_output_artifact
    - .tezt_template
    - .oc.template__retry_flaky
  dependencies:
    - "select_tezts"
    - "oc.build_x86_64-released"
    - "oc.build_x86_64-exp-dev-extra"
    - "oc.build_kernels"
    - "oc.tezt:fetch-records"
  needs:
    - "select_tezts"
    - "oc.build_x86_64-released"
    - "oc.build_x86_64-exp-dev-extra"
    - "oc.build_kernels"
    - "oc.tezt:fetch-records"
  tags:
    - gcp_tezt
  # Add [BISECT_FILE] to the set of artifacts defined in [.tezt_template]
  artifacts:
    paths:
      - selected_tezts.tsv
      - tezt.log
      - tezt-*.log
      - tezt-results-${CI_NODE_INDEX:-1}${TEZT_VARIANT}.json
      - $JUNIT
      - $BISECT_FILE
