# This file was automatically generated, do not edit.
# Edit file ci/bin/main.ml instead.

oc.build:static-x86_64-linux-binaries:
  image: ${build_deps_image_name}:runtime-build-dependencies--${build_deps_image_version}
  stage: build
  tags:
  - gcp
  dependencies: []
  before_script:
  - ./scripts/ci/take_ownership.sh
  - eval $(opam env)
  script:
  - ./scripts/ci/build_static_binaries.sh
  variables:
    ARCH: x86_64
    EXECUTABLE_FILES: script-inputs/released-executables
  artifacts:
    expire_in: 90 days
    paths:
    - octez-binaries/$ARCH/*

oc.build:static-arm64-linux-binaries:
  image: ${build_deps_image_name}:runtime-build-dependencies--${build_deps_image_version}
  stage: build
  tags:
  - gcp_arm64
  dependencies: []
  before_script:
  - ./scripts/ci/take_ownership.sh
  - eval $(opam env)
  script:
  - ./scripts/ci/build_static_binaries.sh
  variables:
    ARCH: arm64
    EXECUTABLE_FILES: script-inputs/released-executables
  artifacts:
    expire_in: 90 days
    paths:
    - octez-binaries/$ARCH/*

oc.docker:amd64:
  image: ${GCP_REGISTRY}/tezos/docker-images/ci-docker:v1.10.0
  stage: build
  tags:
  - gcp
  dependencies: []
  before_script:
  - ./scripts/ci/docker_initialize.sh
  script:
  - ./scripts/ci/docker_release.sh
  services:
  - docker:${DOCKER_VERSION}-dind
  variables:
    DOCKER_VERSION: 24.0.6
    CI_DOCKER_HUB: "true"
    DOCKER_BUILD_TARGET: without-evm-artifacts
    IMAGE_ARCH_PREFIX: amd64_
    EXECUTABLE_FILES: script-inputs/released-executables
    rust_toolchain_image_tag: is-never-pulled

oc.docker:arm64:
  image: ${GCP_REGISTRY}/tezos/docker-images/ci-docker:v1.10.0
  stage: build
  tags:
  - gcp_arm64
  dependencies: []
  before_script:
  - ./scripts/ci/docker_initialize.sh
  script:
  - ./scripts/ci/docker_release.sh
  services:
  - docker:${DOCKER_VERSION}-dind
  variables:
    DOCKER_VERSION: 24.0.6
    CI_DOCKER_HUB: "true"
    DOCKER_BUILD_TARGET: without-evm-artifacts
    IMAGE_ARCH_PREFIX: arm64_
    EXECUTABLE_FILES: script-inputs/released-executables
    rust_toolchain_image_tag: is-never-pulled

oc.build:dpkg:amd64:
  image: $DISTRIBUTION
  stage: build
  tags:
  - gcp
  needs: []
  dependencies: []
  before_script:
  - . ./scripts/version.sh
  - export DEBIAN_FRONTEND=noninteractive
  - apt update
  - apt-get install -y rsync git m4 build-essential patch unzip wget opam jq bc autoconf
    cmake libev-dev libffi-dev libgmp-dev libhidapi-dev pkg-config zlib1g-dev libprotobuf-dev
    protobuf-compiler libsqlite3-dev jq
  script:
  - wget https://sh.rustup.rs/rustup-init.sh
  - chmod +x rustup-init.sh
  - ./rustup-init.sh --profile minimal --default-toolchain  $recommended_rust_version
    -y
  - . $HOME/.cargo/env
  - export OPAMYES="true"
  - opam init --bare --disable-sandboxing
  - make build-deps
  - eval $(opam env)
  - make $TARGET
  - DISTRO=$(echo "$DISTRIBUTION" | cut -d':' -f1)
  - RELEASE=$(echo "$DISTRIBUTION" | cut -d':' -f2)
  - mkdir -p packages/$DISTRO/$RELEASE
  - mv octez-*.* packages/$DISTRO/$RELEASE/
  variables:
    TARGET: dpkg
    OCTEZ_PKGMAINTAINER: nomadic-labs
    BLST_PORTABLE: "yes"
    ARCH: amd64
  artifacts:
    name: ${TARGET}-$ARCH-$CI_COMMIT_REF_SLUG
    expire_in: 1 day
    paths:
    - packages/
    when: on_success
  parallel:
    matrix:
    - DISTRIBUTION:
      - debian:bookworm
      - ubuntu:focal
      - ubuntu:jammy

oc.build:rpm:amd64:
  image: $DISTRIBUTION
  stage: build
  tags:
  - gcp
  needs: []
  dependencies: []
  before_script:
  - . ./scripts/version.sh
  - .gitlab/ci/jobs/build/bin_packages_rpm.sh
  script:
  - wget https://sh.rustup.rs/rustup-init.sh
  - chmod +x rustup-init.sh
  - ./rustup-init.sh --profile minimal --default-toolchain  $recommended_rust_version
    -y
  - . $HOME/.cargo/env
  - export OPAMYES="true"
  - opam init --bare --disable-sandboxing
  - make build-deps
  - eval $(opam env)
  - make $TARGET
  - DISTRO=$(echo "$DISTRIBUTION" | cut -d':' -f1)
  - RELEASE=$(echo "$DISTRIBUTION" | cut -d':' -f2)
  - mkdir -p packages/$DISTRO/$RELEASE
  - mv octez-*.* packages/$DISTRO/$RELEASE/
  variables:
    TARGET: rpm
    OCTEZ_PKGMAINTAINER: nomadic-labs
    BLST_PORTABLE: "yes"
    ARCH: amd64
  artifacts:
    name: ${TARGET}-$ARCH-$CI_COMMIT_REF_SLUG
    expire_in: 1 day
    paths:
    - packages/
    when: on_success
  parallel:
    matrix:
    - DISTRIBUTION:
      - fedora:39
      - rockylinux:9.3

docker:merge_manifests:
  image: ${GCP_REGISTRY}/tezos/docker-images/ci-docker:v1.10.0
  stage: prepare_release
  tags:
  - gcp
  needs:
  - oc.docker:amd64
  - oc.docker:arm64
  dependencies: []
  before_script:
  - ./scripts/ci/docker_initialize.sh
  script:
  - ./scripts/ci/docker_merge_manifests.sh
  services:
  - docker:${DOCKER_VERSION}-dind
  variables:
    DOCKER_VERSION: 24.0.6
    CI_DOCKER_HUB: "true"

gitlab:release:
  image: ${GCP_REGISTRY}/tezos/docker-images/ci-release:v1.4.0
  stage: publish_release_gitlab
  tags:
  - gcp
  needs:
  - oc.build:static-x86_64-linux-binaries
  - oc.build:static-arm64-linux-binaries
  - oc.build:dpkg:amd64
  - oc.build:rpm:amd64
  dependencies:
  - oc.build:static-x86_64-linux-binaries
  - oc.build:static-arm64-linux-binaries
  - oc.build:dpkg:amd64
  - oc.build:rpm:amd64
  interruptible: false
  script:
  - ./scripts/ci/restrict_export_to_octez_source.sh
  - ./scripts/ci/gitlab-release.sh

opam:release:
  image: ${build_deps_image_name}:runtime-build-test-dependencies--${build_deps_image_version}
  stage: publish_release
  tags:
  - gcp
  dependencies: []
  interruptible: false
  script:
  - ./scripts/ci/opam-release.sh
