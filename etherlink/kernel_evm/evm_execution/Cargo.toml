# SPDX-FileCopyrightText: 2023 TriliTech <contact@trili.tech>
# SPDX-FileCopyrightText: 2023 Nomadic Labs <contact@nomadic-labs.com>
# SPDX-FileCopyrightText: 2023 Marigold <contact@marigold.dev>
# SPDX-FileCopyrightText: 2023 Functori <contact@functori.com>
#
# SPDX-License-Identifier: MIT

[package]
name = "evm-execution"
version = "0.1.0"
edition = "2021"
license = "MIT"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]

thiserror.workspace = true

num-bigint.workspace = true
num-traits.workspace = true
primitive-types.workspace = true

hex.workspace = true
rlp.workspace = true
const-decoder.workspace = true

mavryk_crypto_rs.workspace = true
sha2.workspace = true
sha3.workspace = true
ripemd.workspace = true
libsecp256k1.workspace = true

evm.workspace = true
aurora-engine-modexp.workspace = true
bn.workspace = true

mavryk_ethereum.workspace = true
mavryk-evm-logging.workspace = true

mavryk-smart-rollup-core.workspace = true
mavryk-smart-rollup-host.workspace = true
mavryk-smart-rollup-debug.workspace = true
mavryk-smart-rollup-encoding.workspace = true
mavryk-smart-rollup-storage.workspace = true

# Adding these to 'dev_dependencies' causes the rand feature in crypto to be enabled
# on wasm builds, when building the entire workspace.
rand = { workspace = true, optional = true }
proptest = { workspace = true, optional = true }

[dev-dependencies]
mavryk-smart-rollup-mock.workspace = true
mavryk_data_encoding.workspace = true

[features]
default = ["evm_execution"]
testing = ["rand", "proptest"]
evm_execution = []
debug = ["mavryk-evm-logging/debug"]
# the `benchmark` and `benchmark-opcodes` feature flags instrument the kernel for profiling
benchmark = ["mavryk-evm-logging/benchmark"]
benchmark-opcodes = ["benchmark"]
benchmark-full = ["debug", "benchmark", "benchmark-opcodes"]
