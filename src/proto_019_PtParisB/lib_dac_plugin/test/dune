; This file was automatically generated, do not edit.
; Edit file manifest/main.ml instead.

(library
 (name src_proto_019_PtParisB_lib_dac_plugin_test_tezt_lib)
 (instrumentation (backend bisect_ppx))
 (libraries
  tezt.core
  mavkit-libs.base
  mavkit-protocol-019-PtParisB-libs.dac
  mavryk-protocol-019-PtParisB.protocol
  mavkit-libs.base-test-helpers
  mavkit-protocol-019-PtParisB-libs.test-helpers
  mavryk-dac-lib
  mavryk_dac_node_lib
  mavkit-alcotezt)
 (library_flags (:standard -linkall))
 (flags
  (:standard)
  -open Tezt_core
  -open Tezt_core.Base
  -open Mavryk_base.TzPervasives
  -open Mavryk_dac_019_PtParisB
  -open Mavryk_protocol_019_PtParisB
  -open Mavryk_base_test_helpers
  -open Mavryk_019_PtParisB_test_helpers
  -open Mavryk_dac_lib
  -open Mavryk_dac_node_lib
  -open Mavkit_alcotezt)
 (modules test_dac_pages_encoding test_dac_plugin_registration test_helpers))

(executable
 (name main)
 (instrumentation (backend bisect_ppx --bisect-sigterm))
 (libraries
  src_proto_019_PtParisB_lib_dac_plugin_test_tezt_lib
  tezt)
 (link_flags
  (:standard)
  (:include %{workspace_root}/macos-link-flags.sexp))
 (modules main))

(rule
 (alias runtest)
 (package mavkit-protocol-019-PtParisB-libs)
 (enabled_if (<> false %{env:RUNTEZTALIAS=true}))
 (action (run %{dep:./main.exe})))

(rule
 (targets main.ml)
 (action (with-stdout-to %{targets} (echo "let () = Tezt.Test.run ()"))))
